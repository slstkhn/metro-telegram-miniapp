'use client';

import { Box, Button, Typography } from '@mui/material';
import { useState } from 'react';
import { StationSelect } from './components/StationSelect';
import type { Station } from './components/StationSelect';

export default function Home() {
  // 1. –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è —Å–µ–ª–µ–∫—Ç–æ–≤ –∏ –≤—Ä–µ–º–µ–Ω–∏
  const [from, setFrom] = useState<Station | null>(null);
  const [to, setTo] = useState<Station | null>(null);
  const [time, setTime] = useState<number | null>(null);
  const [segments, setSegments] = useState<
    { from: string; to: string; minutes: number; wagonsTip: string }[]
  >([]);

  // 2. handleClick —Å fetch –∏ setTime/ setSegments
  const handleClick = async () => {
    if (!from || !to) return;
    const res = await fetch(`/api/route?from=${from.id}&to=${to.id}`);
    if (!res.ok) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –º–∞—Ä—à—Ä—É—Ç–∞');
      return;
    }
    const json = await res.json();
    setTime(json.total);
    setSegments(json.segments);
  };

  return (
    <Box p={2}>
      <Typography variant="h6" mb={2}>
        –ú–∞—Ä—à—Ä—É—Ç –º–µ—Ç—Ä–æ
      </Typography>

      {/* 3. –ü–µ—Ä–µ–¥–∞—ë–º –∏ value, –∏ onChange */}
      <StationSelect label="–û—Ç–∫—É–¥–∞" value={from} onChange={setFrom} />
      <StationSelect label="–ö—É–¥–∞"   value={to}   onChange={setTo}   />

      <Button
        variant="contained"
        fullWidth
        sx={{ mt: 2 }}
        onClick={handleClick}
        disabled={!from || !to}  // –Ω–µ –¥–∞—ë–º –Ω–∞–∂–∞—Ç—å –±–µ–∑ –≤—ã–±–æ—Ä–∞
      >
        –ü–æ—Å—Ç—Ä–æ–∏—Ç—å
      </Button>

      {/* 4. –í—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è */}
      <Typography sx={{ mt: 2 }}>
        –í—Ä–µ–º—è: {time !== null ? `${time} –º–∏–Ω` : '‚Äî'}
      </Typography>

      {/* 5. –í—ã–≤–æ–¥–∏–º —Å–ø–∏—Å–æ–∫ —Å–µ–≥–º–µ–Ω—Ç–æ–≤ —Å –ø–æ–¥—Å–∫–∞–∑–∫–∞–º–∏ –ø–æ –≤–∞–≥–æ–Ω–∞–º */}
      {segments.length > 0 && (
        <Box sx={{ mt: 2 }}>
          {segments.map((seg, i) => (
            <Typography key={i} variant="body2">
              {seg.from} ‚Üí {seg.to}: {seg.minutes} –º–∏–Ω; ü°Ü –≤–∞–≥–æ–Ω: ¬´{seg.wagonsTip}¬ª
            </Typography>
          ))}
        </Box>
      )}
    </Box>
  );
}
